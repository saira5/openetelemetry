{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NoopExporter =\n/** @class */\nfunction () {\n  function NoopExporter() {} // By default does nothing\n\n\n  NoopExporter.prototype.export = function (_metrics, _resultCallback) {}; // By default does nothing\n\n\n  NoopExporter.prototype.shutdown = function () {\n    return Promise.resolve();\n  };\n\n  return NoopExporter;\n}();\n\nexport { NoopExporter };","map":{"version":3,"sources":["../../../src/export/NoopExporter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAKH,IAAA,YAAA;AAAA;AAAA,YAAA;EAAA,SAAA,YAAA,GAAA,CAWC,CAXD,CACE;;;EACA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UACE,QADF,EAEE,eAFF,EAEiD,CACvC,CAHV,CAFF,CAOE;;;EACA,YAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;IACE,OAAO,OAAO,CAAC,OAAR,EAAP;EACD,CAFD;;EAGF,OAAA,YAAA;AAAC,CAXD,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar NoopExporter = /** @class */ (function () {\n    function NoopExporter() {\n    }\n    // By default does nothing\n    NoopExporter.prototype.export = function (_metrics, _resultCallback) { };\n    // By default does nothing\n    NoopExporter.prototype.shutdown = function () {\n        return Promise.resolve();\n    };\n    return NoopExporter;\n}());\nexport { NoopExporter };\n//# sourceMappingURL=NoopExporter.js.map"]},"metadata":{},"sourceType":"module"}