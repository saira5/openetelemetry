{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { CollectorExporterBrowserBase } from './CollectorExporterBrowserBase';\nimport { toCollectorExportMetricServiceRequest } from '../../transformMetrics';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nvar DEFAULT_COLLECTOR_URL = 'http://localhost:55681/v1/metrics';\n/**\n * Collector Metric Exporter for Web\n */\n\nvar CollectorMetricExporter =\n/** @class */\nfunction (_super) {\n  __extends(CollectorMetricExporter, _super);\n\n  function CollectorMetricExporter(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this, config) || this; // Converts time to nanoseconds\n\n\n    _this._startTime = new Date().getTime() * 1000000;\n    _this._headers = Object.assign(_this._headers, baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_METRICS_HEADERS));\n    return _this;\n  }\n\n  CollectorMetricExporter.prototype.convert = function (metrics) {\n    return toCollectorExportMetricServiceRequest(metrics, this._startTime, this);\n  };\n\n  CollectorMetricExporter.prototype.getDefaultUrl = function (config) {\n    return typeof config.url === 'string' ? config.url : getEnv().OTEL_EXPORTER_OTLP_METRICS_ENDPOINT.length > 0 ? getEnv().OTEL_EXPORTER_OTLP_METRICS_ENDPOINT : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0 ? getEnv().OTEL_EXPORTER_OTLP_ENDPOINT : DEFAULT_COLLECTOR_URL;\n  };\n\n  return CollectorMetricExporter;\n}(CollectorExporterBrowserBase);\n\nexport { CollectorMetricExporter };","map":{"version":3,"sources":["../../../../src/platform/browser/CollectorMetricExporter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKH,SAAS,4BAAT,QAA6C,gCAA7C;AACA,SAAS,qCAAT,QAAsD,wBAAtD;AACA,SAAS,MAAT,EAAiB,YAAjB,QAAqC,qBAArC;AAEA,IAAM,qBAAqB,GAAG,mCAA9B;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;EACU,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;;EAQR,SAAA,uBAAA,CAAY,MAAZ,EAAoD;IAAxC,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA;MAAA,MAAA,GAAA,EAAA;IAAwC;;IAApD,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,KAAa,IADf,CAAoD,CAHpD;;;IACiB,KAAA,CAAA,UAAA,GAAa,IAAI,IAAJ,GAAW,OAAX,KAAuB,OAApC;IAIf,KAAI,CAAC,QAAL,GAAgB,MAAM,CAAC,MAAP,CACd,KAAI,CAAC,QADS,EAEd,YAAY,CAAC,uBAAb,CACE,MAAM,GAAG,kCADX,CAFc,CAAhB;;EAMD;;EAED,uBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UACE,OADF,EACyB;IAEvB,OAAO,qCAAqC,CAC1C,OAD0C,EAE1C,KAAK,UAFqC,EAG1C,IAH0C,CAA5C;EAKD,CARD;;EAUA,uBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,MAAd,EAAiD;IAC/C,OAAO,OAAO,MAAM,CAAC,GAAd,KAAsB,QAAtB,GACH,MAAM,CAAC,GADJ,GAEH,MAAM,GAAG,mCAAT,CAA6C,MAA7C,GAAsD,CAAtD,GACA,MAAM,GAAG,mCADT,GAEA,MAAM,GAAG,2BAAT,CAAqC,MAArC,GAA8C,CAA9C,GACA,MAAM,GAAG,2BADT,GAEA,qBANJ;EAOD,CARD;;EASF,OAAA,uBAAA;AAAC,CAtCD,CACU,4BADV,CAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CollectorExporterBrowserBase } from './CollectorExporterBrowserBase';\nimport { toCollectorExportMetricServiceRequest } from '../../transformMetrics';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nvar DEFAULT_COLLECTOR_URL = 'http://localhost:55681/v1/metrics';\n/**\n * Collector Metric Exporter for Web\n */\nvar CollectorMetricExporter = /** @class */ (function (_super) {\n    __extends(CollectorMetricExporter, _super);\n    function CollectorMetricExporter(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        // Converts time to nanoseconds\n        _this._startTime = new Date().getTime() * 1000000;\n        _this._headers = Object.assign(_this._headers, baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_METRICS_HEADERS));\n        return _this;\n    }\n    CollectorMetricExporter.prototype.convert = function (metrics) {\n        return toCollectorExportMetricServiceRequest(metrics, this._startTime, this);\n    };\n    CollectorMetricExporter.prototype.getDefaultUrl = function (config) {\n        return typeof config.url === 'string'\n            ? config.url\n            : getEnv().OTEL_EXPORTER_OTLP_METRICS_ENDPOINT.length > 0\n                ? getEnv().OTEL_EXPORTER_OTLP_METRICS_ENDPOINT\n                : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0\n                    ? getEnv().OTEL_EXPORTER_OTLP_ENDPOINT\n                    : DEFAULT_COLLECTOR_URL;\n    };\n    return CollectorMetricExporter;\n}(CollectorExporterBrowserBase));\nexport { CollectorMetricExporter };\n//# sourceMappingURL=CollectorMetricExporter.js.map"]},"metadata":{},"sourceType":"module"}