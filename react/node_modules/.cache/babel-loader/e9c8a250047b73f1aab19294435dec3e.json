{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/** Sampler that samples no traces. */\n\nvar AlwaysOffSampler =\n/** @class */\nfunction () {\n  function AlwaysOffSampler() {}\n\n  AlwaysOffSampler.prototype.shouldSample = function () {\n    return {\n      decision: SamplingDecision.NOT_RECORD\n    };\n  };\n\n  AlwaysOffSampler.prototype.toString = function () {\n    return 'AlwaysOffSampler';\n  };\n\n  return AlwaysOffSampler;\n}();\n\nexport { AlwaysOffSampler };","map":{"version":3,"sources":["../../../../src/trace/sampler/AlwaysOffSampler.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAEH,SAAkB,gBAAlB,QAA0D,oBAA1D;AAEA;;AACA,IAAA,gBAAA;AAAA;AAAA,YAAA;EAAA,SAAA,gBAAA,GAAA,CAUC;;EATC,gBAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;IACE,OAAO;MACL,QAAQ,EAAE,gBAAgB,CAAC;IADtB,CAAP;EAGD,CAJD;;EAMA,gBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;IACE,OAAO,kBAAP;EACD,CAFD;;EAGF,OAAA,gBAAA;AAAC,CAVD,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '@opentelemetry/api';\n/** Sampler that samples no traces. */\nvar AlwaysOffSampler = /** @class */ (function () {\n    function AlwaysOffSampler() {\n    }\n    AlwaysOffSampler.prototype.shouldSample = function () {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    };\n    AlwaysOffSampler.prototype.toString = function () {\n        return 'AlwaysOffSampler';\n    };\n    return AlwaysOffSampler;\n}());\nexport { AlwaysOffSampler };\n//# sourceMappingURL=AlwaysOffSampler.js.map"]},"metadata":{},"sourceType":"module"}