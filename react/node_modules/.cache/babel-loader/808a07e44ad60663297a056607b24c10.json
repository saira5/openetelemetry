{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor =\n/** @class */\nfunction () {\n  function NoopSpanProcessor() {}\n\n  NoopSpanProcessor.prototype.onStart = function (_span, _context) {};\n\n  NoopSpanProcessor.prototype.onEnd = function (_span) {};\n\n  NoopSpanProcessor.prototype.shutdown = function () {\n    return Promise.resolve();\n  };\n\n  NoopSpanProcessor.prototype.forceFlush = function () {\n    return Promise.resolve();\n  };\n\n  return NoopSpanProcessor;\n}();\n\nexport { NoopSpanProcessor };","map":{"version":3,"sources":["../../../src/export/NoopSpanProcessor.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAOH;AACA,IAAA,iBAAA;AAAA;AAAA,YAAA;EAAA,SAAA,iBAAA,GAAA,CASC;;EARC,iBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,KAAR,EAAqB,QAArB,EAAsC,CAAU,CAAhD;;EACA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,KAAN,EAAyB,CAAU,CAAnC;;EACA,iBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;IACE,OAAO,OAAO,CAAC,OAAR,EAAP;EACD,CAFD;;EAGA,iBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;IACE,OAAO,OAAO,CAAC,OAAR,EAAP;EACD,CAFD;;EAGF,OAAA,iBAAA;AAAC,CATD,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor = /** @class */ (function () {\n    function NoopSpanProcessor() {\n    }\n    NoopSpanProcessor.prototype.onStart = function (_span, _context) { };\n    NoopSpanProcessor.prototype.onEnd = function (_span) { };\n    NoopSpanProcessor.prototype.shutdown = function () {\n        return Promise.resolve();\n    };\n    NoopSpanProcessor.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    return NoopSpanProcessor;\n}());\nexport { NoopSpanProcessor };\n//# sourceMappingURL=NoopSpanProcessor.js.map"]},"metadata":{},"sourceType":"module"}