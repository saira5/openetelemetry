{"ast":null,"code":"var _this=this;import shimmer from\"shimmer\";import{AttributeNames}from\"./enum/AttributeNames\";import{getTracing}from\"./commonTracing\";/**\r\n     * Patches the render lifecycle method\r\n     */export var _patchUseEffect=function _patchUseEffect(){return function(original){var plugin=_this;return function patchUseEffect(){// let parentSpan;\n// if (!plugin._parentSpanMap.get(this)) {\n// parentSpan = plugin._getParentSpan(this, AttributeNames.AttributeNames.EFFECT_SPAN);\nvar tracer=getTracing(\"example-react-load\",AttributeNames.EFFECT_SPAN);tracer.end();// }\n// return plugin._instrumentFunction(this, 'useEffect()', parentSpan, () => {\n//     return original.apply(this, args);\n// });\n};};};/**\r\n     * Patches the setState function\r\n     */export var _patchSetState=function _patchSetState(){return function(original){var plugin=_this;return function patchSetState(){var tracer=getTracing(\"example-react-load\",AttributeNames.EFFECT_SPAN);tracer.end();//     const parentSpan = plugin._getParentSpan(this, AttributeNames_1.AttributeNames.UPDATING_SPAN);\n//     return plugin._instrumentFunction(this, 'setState()', parentSpan, () => {\n//         return original.apply(this, args);\n//     });\n};};};/**\r\n     * patch function which wraps all the lifecycle methods\r\n     */export var patch=function patch(){shimmer.wrap(_this,'useEffect',_this._patchUseEffect());shimmer.wrap(_this,'setState',_this._patchSetState());};/**\r\n     * unpatch function to unwrap all the lifecycle methods\r\n     */export var unpatch=function unpatch(){console.log(\"Unpatch method called\");shimmer.unwrap(_this,'useEffect');shimmer.unwrap(_this,'setState');// this._parentSpanMap = new WeakMap();\n};","map":{"version":3,"names":["shimmer","AttributeNames","getTracing","_patchUseEffect","original","plugin","patchUseEffect","tracer","EFFECT_SPAN","end","_patchSetState","patchSetState","patch","wrap","unpatch","console","log","unwrap"],"sources":["C:/React/cloned telemetry/opentelemetry-js-contrib/examples/react-load/react/src/automation.jsx"],"sourcesContent":["import shimmer from \"shimmer\";\r\nimport { AttributeNames } from \"./enum/AttributeNames\";\r\nimport { getTracing } from \"./commonTracing\";\r\n\r\n\r\n/**\r\n     * Patches the render lifecycle method\r\n     */\r\n export const _patchUseEffect=()=> {\r\n    return (original) => {\r\n        const plugin = this;\r\n        return function patchUseEffect(...args) {\r\n           // let parentSpan;\r\n           // if (!plugin._parentSpanMap.get(this)) {\r\n               // parentSpan = plugin._getParentSpan(this, AttributeNames.AttributeNames.EFFECT_SPAN);\r\n                const tracer = getTracing(\"example-react-load\", AttributeNames.EFFECT_SPAN);\r\n                tracer.end();\r\n            \r\n           // }\r\n          \r\n            // return plugin._instrumentFunction(this, 'useEffect()', parentSpan, () => {\r\n            //     return original.apply(this, args);\r\n            // });\r\n        };\r\n    };\r\n}\r\n\r\n/**\r\n     * Patches the setState function\r\n     */\r\n export const _patchSetState=()=> {\r\n    return (original) => {\r\n        const plugin = this;\r\n        return function patchSetState(...args) {\r\n            const tracer = getTracing(\"example-react-load\", AttributeNames.EFFECT_SPAN);\r\n            tracer.end();\r\n        \r\n        //     const parentSpan = plugin._getParentSpan(this, AttributeNames_1.AttributeNames.UPDATING_SPAN);\r\n        //     return plugin._instrumentFunction(this, 'setState()', parentSpan, () => {\r\n        //         return original.apply(this, args);\r\n        //     });\r\n         };\r\n    };\r\n}\r\n\r\n /**\r\n     * patch function which wraps all the lifecycle methods\r\n     */\r\n  export const  patch=()=> {\r\n    shimmer.wrap(this, 'useEffect', this._patchUseEffect());\r\n    shimmer.wrap(this, 'setState', this._patchSetState());\r\n}\r\n\r\n /**\r\n     * unpatch function to unwrap all the lifecycle methods\r\n     */\r\n  export const unpatch=()=> {\r\n      console.log(\"Unpatch method called\")\r\n    shimmer.unwrap(this, 'useEffect');\r\n    shimmer.unwrap(this, 'setState');\r\n   \r\n    // this._parentSpanMap = new WeakMap();\r\n}"],"mappings":"eAAA,MAAOA,QAAP,KAAoB,SAApB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,UAAT,KAA2B,iBAA3B,CAGA;AACA;AACA,OACC,MAAO,IAAMC,gBAAe,CAAC,QAAhBA,gBAAgB,EAAK,CAC/B,MAAO,UAACC,QAAD,CAAc,CACjB,GAAMC,OAAM,CAAG,KAAf,CACA,MAAO,SAASC,eAAT,EAAiC,CACrC;AACA;AACI;AACC,GAAMC,OAAM,CAAGL,UAAU,CAAC,oBAAD,CAAuBD,cAAc,CAACO,WAAtC,CAAzB,CACAD,MAAM,CAACE,GAAP,GAEL;AAEC;AACA;AACA;AACH,CAZD,CAaH,CAfD,CAgBH,CAjBO,CAmBR;AACA;AACA,OACC,MAAO,IAAMC,eAAc,CAAC,QAAfA,eAAe,EAAK,CAC9B,MAAO,UAACN,QAAD,CAAc,CACjB,GAAMC,OAAM,CAAG,KAAf,CACA,MAAO,SAASM,cAAT,EAAgC,CACnC,GAAMJ,OAAM,CAAGL,UAAU,CAAC,oBAAD,CAAuBD,cAAc,CAACO,WAAtC,CAAzB,CACAD,MAAM,CAACE,GAAP,GAEJ;AACA;AACA;AACA;AACE,CARF,CASH,CAXD,CAYH,CAbO,CAeP;AACD;AACA,OACE,MAAO,IAAOG,MAAK,CAAC,QAANA,MAAM,EAAK,CACvBZ,OAAO,CAACa,IAAR,CAAa,KAAb,CAAmB,WAAnB,CAAgC,KAAI,CAACV,eAAL,EAAhC,EACAH,OAAO,CAACa,IAAR,CAAa,KAAb,CAAmB,UAAnB,CAA+B,KAAI,CAACH,cAAL,EAA/B,EACH,CAHQ,CAKR;AACD;AACA,OACE,MAAO,IAAMI,QAAO,CAAC,QAARA,QAAQ,EAAK,CACtBC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACFhB,OAAO,CAACiB,MAAR,CAAe,KAAf,CAAqB,WAArB,EACAjB,OAAO,CAACiB,MAAR,CAAe,KAAf,CAAqB,UAArB,EAEA;AACH,CANQ"},"metadata":{},"sourceType":"module"}