{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { CollectorExporterBrowserBase } from './CollectorExporterBrowserBase';\nimport { toCollectorExportTraceServiceRequest } from '../../transform';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nvar DEFAULT_COLLECTOR_URL = 'http://localhost:55681/v1/traces';\n/**\n * Collector Trace Exporter for Web\n */\n\nvar CollectorTraceExporter =\n/** @class */\nfunction (_super) {\n  __extends(CollectorTraceExporter, _super);\n\n  function CollectorTraceExporter(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this, config) || this;\n\n    _this._headers = Object.assign(_this._headers, baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS));\n    return _this;\n  }\n\n  CollectorTraceExporter.prototype.convert = function (spans) {\n    return toCollectorExportTraceServiceRequest(spans, this, true);\n  };\n\n  CollectorTraceExporter.prototype.getDefaultUrl = function (config) {\n    return typeof config.url === 'string' ? config.url : getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length > 0 ? getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0 ? getEnv().OTEL_EXPORTER_OTLP_ENDPOINT : DEFAULT_COLLECTOR_URL;\n  };\n\n  return CollectorTraceExporter;\n}(CollectorExporterBrowserBase);\n\nexport { CollectorTraceExporter };","map":{"version":3,"sources":["../../../../src/platform/browser/CollectorTraceExporter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGH,SAAS,4BAAT,QAA6C,gCAA7C;AAEA,SAAS,oCAAT,QAAqD,iBAArD;AAEA,SAAS,MAAT,EAAiB,YAAjB,QAAqC,qBAArC;AAEA,IAAM,qBAAqB,GAAG,kCAA9B;AAEA;;AAEG;;AACH,IAAA,sBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;EACU,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA;;EAKR,SAAA,sBAAA,CAAY,MAAZ,EAAoD;IAAxC,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA;MAAA,MAAA,GAAA,EAAA;IAAwC;;IAApD,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,KAAa,IADf;;IAEE,KAAI,CAAC,QAAL,GAAgB,MAAM,CAAC,MAAP,CACd,KAAI,CAAC,QADS,EAEd,YAAY,CAAC,uBAAb,CACE,MAAM,GAAG,iCADX,CAFc,CAAhB;;EAMD;;EACD,sBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UACE,KADF,EACuB;IAErB,OAAO,oCAAoC,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,CAA3C;EACD,CAJD;;EAMA,sBAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,MAAd,EAAiD;IAC/C,OAAO,OAAO,MAAM,CAAC,GAAd,KAAsB,QAAtB,GACH,MAAM,CAAC,GADJ,GAEH,MAAM,GAAG,kCAAT,CAA4C,MAA5C,GAAqD,CAArD,GACA,MAAM,GAAG,kCADT,GAEA,MAAM,GAAG,2BAAT,CAAqC,MAArC,GAA8C,CAA9C,GACA,MAAM,GAAG,2BADT,GAEA,qBANJ;EAOD,CARD;;EASF,OAAA,sBAAA;AAAC,CA9BD,CACU,4BADV,CAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CollectorExporterBrowserBase } from './CollectorExporterBrowserBase';\nimport { toCollectorExportTraceServiceRequest } from '../../transform';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nvar DEFAULT_COLLECTOR_URL = 'http://localhost:55681/v1/traces';\n/**\n * Collector Trace Exporter for Web\n */\nvar CollectorTraceExporter = /** @class */ (function (_super) {\n    __extends(CollectorTraceExporter, _super);\n    function CollectorTraceExporter(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        _this._headers = Object.assign(_this._headers, baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS));\n        return _this;\n    }\n    CollectorTraceExporter.prototype.convert = function (spans) {\n        return toCollectorExportTraceServiceRequest(spans, this, true);\n    };\n    CollectorTraceExporter.prototype.getDefaultUrl = function (config) {\n        return typeof config.url === 'string'\n            ? config.url\n            : getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length > 0\n                ? getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT\n                : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0\n                    ? getEnv().OTEL_EXPORTER_OTLP_ENDPOINT\n                    : DEFAULT_COLLECTOR_URL;\n    };\n    return CollectorTraceExporter;\n}(CollectorExporterBrowserBase));\nexport { CollectorTraceExporter };\n//# sourceMappingURL=CollectorTraceExporter.js.map"]},"metadata":{},"sourceType":"module"}