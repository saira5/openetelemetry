{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Implementation of {@link TypeObserverResult}\n */\nvar ObserverResult =\n/** @class */\nfunction () {\n  function ObserverResult() {\n    this.values = new Map();\n  }\n\n  ObserverResult.prototype.observe = function (value, labels) {\n    this.values.set(labels, value);\n  };\n\n  return ObserverResult;\n}();\n\nexport { ObserverResult };","map":{"version":3,"sources":["../../src/ObserverResult.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAOH;;AAEG;AACH,IAAA,cAAA;AAAA;AAAA,YAAA;EAAA,SAAA,cAAA,GAAA;IACE,KAAA,MAAA,GAA8B,IAAI,GAAJ,EAA9B;EAKD;;EAHC,cAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,KAAR,EAAuB,MAAvB,EAAqC;IACnC,KAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB,EAAwB,KAAxB;EACD,CAFD;;EAGF,OAAA,cAAA;AAAC,CAND,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Implementation of {@link TypeObserverResult}\n */\nvar ObserverResult = /** @class */ (function () {\n    function ObserverResult() {\n        this.values = new Map();\n    }\n    ObserverResult.prototype.observe = function (value, labels) {\n        this.values.set(labels, value);\n    };\n    return ObserverResult;\n}());\nexport { ObserverResult };\n//# sourceMappingURL=ObserverResult.js.map"]},"metadata":{},"sourceType":"module"}