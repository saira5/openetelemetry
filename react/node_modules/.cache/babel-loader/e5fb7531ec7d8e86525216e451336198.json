{"ast":null,"code":"import _slicedToArray from\"C:\\\\React\\\\cloned telemetry\\\\opentelemetry-js-contrib\\\\examples\\\\react-load\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Button}from\"reactstrap\";import{getTracing}from\"./commonTracing\";function Content(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),results=_useState4[0],setResults=_useState4[1];useEffect(function(){var tracer=getTracing(\"example-react-load\",\"reactload-: mounting\");tracer.end();return function(){console.log(\"Behavior right before the component is removed from the DOM.\");var tracer=getTracing(\"example-react-load\",\"reactload-: unmounting\");tracer.end();};},[]);useEffect(function(){console.log(\"Behavior when the component receives new state or props.\");var tracer=getTracing(\"example-react-load\",\"reactload-: updating\");tracer.end();});var buttonHandler=function buttonHandler(e){setIsLoading(true);var randomDelay=Math.random()*10000;var tracer=getTracing(\"example-react-load\",\"reactload: btnClick\");fetchAPI().then(function(response){return response.json();}).then(function(result){console.log(result);tracer.end();setIsLoading(false);setResults(result);});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"React Plugin Demo App\"),/*#__PURE__*/React.createElement(Button,{className:\"m-3\",onClick:buttonHandler,variant:\"primary\",size:\"lg\"},\"Make Request\"),/*#__PURE__*/React.createElement(\"div\",{id:\"results\",className:\"m-3\"},isLoading&&/*#__PURE__*/React.createElement(\"div\",null,\" Loading results...\"),results&&/*#__PURE__*/React.createElement(\"div\",null,\"Username is: \",results.username)));}function fetchAPI(){// param is a highlighted word from the user before it clicked the button\nconsole.log(\"================= trigger api=========\");return fetch(\"http://hn.algolia.com/api/v1/users/pg\");}export default Content;","map":{"version":3,"names":["React","useState","useEffect","Button","getTracing","Content","isLoading","setIsLoading","results","setResults","tracer","end","console","log","buttonHandler","e","randomDelay","Math","random","fetchAPI","then","response","json","result","username","fetch"],"sources":["C:/React/cloned telemetry/opentelemetry-js-contrib/examples/react-load/react/src/Content.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { getTracing } from \"./commonTracing\";\r\n\r\nfunction Content() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const tracer = getTracing(\"example-react-load\", \"reactload-: mounting\");\r\n    tracer.end();\r\n    return () => {\r\n      console.log(\r\n        \"Behavior right before the component is removed from the DOM.\"\r\n      );\r\n      const tracer = getTracing(\"example-react-load\", \"reactload-: unmounting\");\r\n      tracer.end();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Behavior when the component receives new state or props.\");\r\n    const tracer = getTracing(\"example-react-load\", \"reactload-: updating\");\r\n    tracer.end();\r\n  });\r\n\r\n  const buttonHandler = (e) => {\r\n    setIsLoading(true);\r\n    const randomDelay = Math.random() * 10000;\r\n    const tracer = getTracing(\"example-react-load\", \"reactload: btnClick\");\r\n\r\n    fetchAPI()\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        tracer.end();\r\n        setIsLoading(false);\r\n        setResults(result);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>React Plugin Demo App</h1>\r\n      <Button\r\n        className=\"m-3\"\r\n        onClick={buttonHandler}\r\n        variant=\"primary\"\r\n        size=\"lg\"\r\n      >\r\n        Make Request\r\n      </Button>\r\n      <div id=\"results\" className=\"m-3\">\r\n        {isLoading && <div> Loading results...</div>}\r\n        {results && <div>Username is: {results.username}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction fetchAPI() {\r\n  // param is a highlighted word from the user before it clicked the button\r\n  console.log(\"================= trigger api=========\");\r\n  return fetch(\"http://hn.algolia.com/api/v1/users/pg\");\r\n}\r\n\r\nexport default Content;"],"mappings":"8MAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,YAAvB,CACA,OAASC,UAAT,KAA2B,iBAA3B,CAEA,QAASC,QAAT,EAAmB,CACjB,cAAkCJ,QAAQ,CAAC,KAAD,CAA1C,wCAAOK,SAAP,eAAkBC,YAAlB,eACA,eAA8BN,QAAQ,CAAC,IAAD,CAAtC,yCAAOO,OAAP,eAAgBC,UAAhB,eAEAP,SAAS,CAAC,UAAM,CACd,GAAMQ,OAAM,CAAGN,UAAU,CAAC,oBAAD,CAAuB,sBAAvB,CAAzB,CACAM,MAAM,CAACC,GAAP,GACA,MAAO,WAAM,CACXC,OAAO,CAACC,GAAR,CACE,8DADF,EAGA,GAAMH,OAAM,CAAGN,UAAU,CAAC,oBAAD,CAAuB,wBAAvB,CAAzB,CACAM,MAAM,CAACC,GAAP,GACD,CAND,CAOD,CAVQ,CAUN,EAVM,CAAT,CAYAT,SAAS,CAAC,UAAM,CACdU,OAAO,CAACC,GAAR,CAAY,0DAAZ,EACA,GAAMH,OAAM,CAAGN,UAAU,CAAC,oBAAD,CAAuB,sBAAvB,CAAzB,CACAM,MAAM,CAACC,GAAP,GACD,CAJQ,CAAT,CAMA,GAAMG,cAAa,CAAG,QAAhBA,cAAgB,CAACC,CAAD,CAAO,CAC3BR,YAAY,CAAC,IAAD,CAAZ,CACA,GAAMS,YAAW,CAAGC,IAAI,CAACC,MAAL,GAAgB,KAApC,CACA,GAAMR,OAAM,CAAGN,UAAU,CAAC,oBAAD,CAAuB,qBAAvB,CAAzB,CAEAe,QAAQ,GACLC,IADH,CACQ,SAACC,QAAD,QAAcA,SAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,MAAD,CAAY,CAChBX,OAAO,CAACC,GAAR,CAAYU,MAAZ,EACAb,MAAM,CAACC,GAAP,GACAJ,YAAY,CAAC,KAAD,CAAZ,CACAE,UAAU,CAACc,MAAD,CAAV,CACD,CAPH,EAQD,CAbD,CAeA,mBACE,4CACE,sDADF,cAEE,oBAAC,MAAD,EACE,SAAS,CAAC,KADZ,CAEE,OAAO,CAAET,aAFX,CAGE,OAAO,CAAC,SAHV,CAIE,IAAI,CAAC,IAJP,iBAFF,cAUE,2BAAK,EAAE,CAAC,SAAR,CAAkB,SAAS,CAAC,KAA5B,EACGR,SAAS,eAAI,qDADhB,CAEGE,OAAO,eAAI,+CAAmBA,OAAO,CAACgB,QAA3B,CAFd,CAVF,CADF,CAiBD,CAED,QAASL,SAAT,EAAoB,CAClB;AACAP,OAAO,CAACC,GAAR,CAAY,wCAAZ,EACA,MAAOY,MAAK,CAAC,uCAAD,CAAZ,CACD,CAED,cAAepB,QAAf"},"metadata":{},"sourceType":"module"}