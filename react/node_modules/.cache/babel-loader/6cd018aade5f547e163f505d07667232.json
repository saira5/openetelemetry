{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * Collector Exporter abstract base class\n */\n\nvar CollectorExporterBase =\n/** @class */\nfunction () {\n  /**\n   * @param config\n   */\n  function CollectorExporterBase(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this._isShutdown = false;\n    this._shuttingDownPromise = Promise.resolve();\n    this._sendingPromises = [];\n    this.url = this.getDefaultUrl(config);\n\n    if (typeof config.hostname === 'string') {\n      this.hostname = config.hostname;\n    }\n\n    this.attributes = config.attributes;\n    this.shutdown = this.shutdown.bind(this);\n    this._concurrencyLimit = typeof config.concurrencyLimit === 'number' ? config.concurrencyLimit : Infinity; // platform dependent\n\n    this.onInit(config);\n  }\n  /**\n   * Export items.\n   * @param items\n   * @param resultCallback\n   */\n\n\n  CollectorExporterBase.prototype.export = function (items, resultCallback) {\n    if (this._isShutdown) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Exporter has been shutdown')\n      });\n      return;\n    }\n\n    if (this._sendingPromises.length >= this._concurrencyLimit) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: new Error('Concurrent export limit reached')\n      });\n      return;\n    }\n\n    this._export(items).then(function () {\n      resultCallback({\n        code: ExportResultCode.SUCCESS\n      });\n    }).catch(function (error) {\n      resultCallback({\n        code: ExportResultCode.FAILED,\n        error: error\n      });\n    });\n  };\n\n  CollectorExporterBase.prototype._export = function (items) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      try {\n        diag.debug('items to be sent', items);\n\n        _this.send(items, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  /**\n   * Shutdown the exporter.\n   */\n\n\n  CollectorExporterBase.prototype.shutdown = function () {\n    var _this = this;\n\n    if (this._isShutdown) {\n      diag.debug('shutdown already started');\n      return this._shuttingDownPromise;\n    }\n\n    this._isShutdown = true;\n    diag.debug('shutdown started');\n    this._shuttingDownPromise = new Promise(function (resolve, reject) {\n      Promise.resolve().then(function () {\n        return _this.onShutdown();\n      }).then(function () {\n        return Promise.all(_this._sendingPromises);\n      }).then(function () {\n        resolve();\n      }).catch(function (e) {\n        reject(e);\n      });\n    });\n    return this._shuttingDownPromise;\n  };\n\n  return CollectorExporterBase;\n}();\n\nexport { CollectorExporterBase };","map":{"version":3,"sources":["../../src/CollectorExporterBase.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * Collector Exporter abstract base class\n */\nvar CollectorExporterBase = /** @class */ (function () {\n    /**\n     * @param config\n     */\n    function CollectorExporterBase(config) {\n        if (config === void 0) { config = {}; }\n        this._isShutdown = false;\n        this._shuttingDownPromise = Promise.resolve();\n        this._sendingPromises = [];\n        this.url = this.getDefaultUrl(config);\n        if (typeof config.hostname === 'string') {\n            this.hostname = config.hostname;\n        }\n        this.attributes = config.attributes;\n        this.shutdown = this.shutdown.bind(this);\n        this._concurrencyLimit =\n            typeof config.concurrencyLimit === 'number'\n                ? config.concurrencyLimit\n                : Infinity;\n        // platform dependent\n        this.onInit(config);\n    }\n    /**\n     * Export items.\n     * @param items\n     * @param resultCallback\n     */\n    CollectorExporterBase.prototype.export = function (items, resultCallback) {\n        if (this._isShutdown) {\n            resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Exporter has been shutdown'),\n            });\n            return;\n        }\n        if (this._sendingPromises.length >= this._concurrencyLimit) {\n            resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Concurrent export limit reached'),\n            });\n            return;\n        }\n        this._export(items)\n            .then(function () {\n            resultCallback({ code: ExportResultCode.SUCCESS });\n        })\n            .catch(function (error) {\n            resultCallback({ code: ExportResultCode.FAILED, error: error });\n        });\n    };\n    CollectorExporterBase.prototype._export = function (items) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                diag.debug('items to be sent', items);\n                _this.send(items, resolve, reject);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Shutdown the exporter.\n     */\n    CollectorExporterBase.prototype.shutdown = function () {\n        var _this = this;\n        if (this._isShutdown) {\n            diag.debug('shutdown already started');\n            return this._shuttingDownPromise;\n        }\n        this._isShutdown = true;\n        diag.debug('shutdown started');\n        this._shuttingDownPromise = new Promise(function (resolve, reject) {\n            Promise.resolve()\n                .then(function () {\n                return _this.onShutdown();\n            })\n                .then(function () {\n                return Promise.all(_this._sendingPromises);\n            })\n                .then(function () {\n                resolve();\n            })\n                .catch(function (e) {\n                reject(e);\n            });\n        });\n        return this._shuttingDownPromise;\n    };\n    return CollectorExporterBase;\n}());\nexport { CollectorExporterBase };\n//# sourceMappingURL=CollectorExporterBase.js.map"]},"metadata":{},"sourceType":"module"}