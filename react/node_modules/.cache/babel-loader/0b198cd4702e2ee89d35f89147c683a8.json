{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\n\nvar InMemorySpanExporter =\n/** @class */\nfunction () {\n  function InMemorySpanExporter() {\n    this._finishedSpans = [];\n    /**\n     * Indicates if the exporter has been \"shutdown.\"\n     * When false, exported spans will not be stored in-memory.\n     */\n\n    this._stopped = false;\n  }\n\n  InMemorySpanExporter.prototype.export = function (spans, resultCallback) {\n    var _a;\n\n    if (this._stopped) return resultCallback({\n      code: ExportResultCode.FAILED,\n      error: new Error('Exporter has been stopped')\n    });\n\n    (_a = this._finishedSpans).push.apply(_a, spans);\n\n    setTimeout(function () {\n      return resultCallback({\n        code: ExportResultCode.SUCCESS\n      });\n    }, 0);\n  };\n\n  InMemorySpanExporter.prototype.shutdown = function () {\n    this._stopped = true;\n    this._finishedSpans = [];\n    return Promise.resolve();\n  };\n\n  InMemorySpanExporter.prototype.reset = function () {\n    this._finishedSpans = [];\n  };\n\n  InMemorySpanExporter.prototype.getFinishedSpans = function () {\n    return this._finishedSpans;\n  };\n\n  return InMemorySpanExporter;\n}();\n\nexport { InMemorySpanExporter };","map":{"version":3,"sources":["../../../src/export/InMemorySpanExporter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAIH,SAAuB,gBAAvB,QAA+C,qBAA/C;AAEA;;;;AAIG;;AACH,IAAA,oBAAA;AAAA;AAAA,YAAA;EAAA,SAAA,oBAAA,GAAA;IACU,KAAA,cAAA,GAAiC,EAAjC;IACR;;;AAGG;;IACO,KAAA,QAAA,GAAW,KAAX;EA6BX;;EA3BC,oBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UACE,KADF,EAEE,cAFF,EAEgD;;;IAE9C,IAAI,KAAK,QAAT,EACE,OAAO,cAAc,CAAC;MACpB,IAAI,EAAE,gBAAgB,CAAC,MADH;MAEpB,KAAK,EAAE,IAAI,KAAJ,CAAU,2BAAV;IAFa,CAAD,CAArB;;IAIF,CAAA,EAAA,GAAA,KAAK,cAAL,EAAoB,IAApB,CAAwB,KAAxB,CAAwB,EAAxB,EAA4B,KAA5B;;IAEA,UAAU,CAAC,YAAA;MAAM,OAAA,cAAc,CAAC;QAAE,IAAI,EAAE,gBAAgB,CAAvC;MAAe,CAAD,CAAd;IAAkD,CAAzD,EAA2D,CAA3D,CAAV;EACD,CAZD;;EAcA,oBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;IACE,KAAK,QAAL,GAAgB,IAAhB;IACA,KAAK,cAAL,GAAsB,EAAtB;IACA,OAAO,OAAO,CAAC,OAAR,EAAP;EACD,CAJD;;EAMA,oBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;IACE,KAAK,cAAL,GAAsB,EAAtB;EACD,CAFD;;EAIA,oBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;IACE,OAAO,KAAK,cAAZ;EACD,CAFD;;EAGF,OAAA,oBAAA;AAAC,CAnCD,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * This class can be used for testing purposes. It stores the exported spans\n * in a list in memory that can be retrieved using the `getFinishedSpans()`\n * method.\n */\nvar InMemorySpanExporter = /** @class */ (function () {\n    function InMemorySpanExporter() {\n        this._finishedSpans = [];\n        /**\n         * Indicates if the exporter has been \"shutdown.\"\n         * When false, exported spans will not be stored in-memory.\n         */\n        this._stopped = false;\n    }\n    InMemorySpanExporter.prototype.export = function (spans, resultCallback) {\n        var _a;\n        if (this._stopped)\n            return resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Exporter has been stopped'),\n            });\n        (_a = this._finishedSpans).push.apply(_a, spans);\n        setTimeout(function () { return resultCallback({ code: ExportResultCode.SUCCESS }); }, 0);\n    };\n    InMemorySpanExporter.prototype.shutdown = function () {\n        this._stopped = true;\n        this._finishedSpans = [];\n        return Promise.resolve();\n    };\n    InMemorySpanExporter.prototype.reset = function () {\n        this._finishedSpans = [];\n    };\n    InMemorySpanExporter.prototype.getFinishedSpans = function () {\n        return this._finishedSpans;\n    };\n    return InMemorySpanExporter;\n}());\nexport { InMemorySpanExporter };\n//# sourceMappingURL=InMemorySpanExporter.js.map"]},"metadata":{},"sourceType":"module"}