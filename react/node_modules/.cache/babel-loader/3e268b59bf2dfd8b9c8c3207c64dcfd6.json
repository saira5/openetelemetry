{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function hexToBase64(hexStr) {\n  var hexStrLen = hexStr.length;\n  var hexAsciiCharsStr = '';\n\n  for (var i = 0; i < hexStrLen; i += 2) {\n    var hexPair = hexStr.substring(i, i + 2);\n    var hexVal = parseInt(hexPair, 16);\n    hexAsciiCharsStr += String.fromCharCode(hexVal);\n  }\n\n  return btoa(hexAsciiCharsStr);\n}","map":{"version":3,"sources":["../../../../src/platform/browser/hex-to-base64.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AACH,OAAM,SAAU,WAAV,CAAsB,MAAtB,EAAoC;EACxC,IAAM,SAAS,GAAG,MAAM,CAAC,MAAzB;EACA,IAAI,gBAAgB,GAAG,EAAvB;;EACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,IAAI,CAApC,EAAuC;IACrC,IAAM,OAAO,GAAG,MAAM,CAAC,SAAP,CAAiB,CAAjB,EAAoB,CAAC,GAAG,CAAxB,CAAhB;IACA,IAAM,MAAM,GAAG,QAAQ,CAAC,OAAD,EAAU,EAAV,CAAvB;IACA,gBAAgB,IAAI,MAAM,CAAC,YAAP,CAAoB,MAApB,CAApB;EACD;;EACD,OAAO,IAAI,CAAC,gBAAD,CAAX;AACD","sourceRoot":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function hexToBase64(hexStr) {\n    var hexStrLen = hexStr.length;\n    var hexAsciiCharsStr = '';\n    for (var i = 0; i < hexStrLen; i += 2) {\n        var hexPair = hexStr.substring(i, i + 2);\n        var hexVal = parseInt(hexPair, 16);\n        hexAsciiCharsStr += String.fromCharCode(hexVal);\n    }\n    return btoa(hexAsciiCharsStr);\n}\n//# sourceMappingURL=hex-to-base64.js.map"]},"metadata":{},"sourceType":"module"}